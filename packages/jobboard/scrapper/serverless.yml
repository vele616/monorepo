org: jobboard
app: jobboard-scrapper
service: jobboard-scrapper
plugins:
  - serverless-dotenv-plugin
  - serverless-layers
  - serverless-offline
  - serverless-offline-dynamodb-streams
  - serverless-s3-local
  - serverless-offline-aws-eventbridge
provider:
  name: aws
  region: eu-central-1
  runtime: nodejs12.x
  environment:
  iamRoleStatements:
    - Effect: "Allow"
      Action:
       - "events:*"
      Resource: "${self:provider.environment.EVENT_BUS_ARN}"
    - Effect: "Allow"
      Action:
       - "s3:*"
      Resource: "arn:aws:s3:::${self:provider.environment.MARKDOWN_S3_BUCKET}/*"
    - Effect: "Allow"
      Action:
       - "s3:*"
      Resource: "arn:aws:s3:::${self:provider.environment.LOGOS_S3_BUCKET}/*"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:ListStreams
        - dynamodb:BatchWriteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.HUBS_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:ListStreams
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.URLS_TABLE}"
functions:
  hubHandler:
    handler: src/hubHandler.exec
    memorySize: 768
    timeout: 180
    events:
      - schedule:
          rate: rate(1 minute)
  urlHandler:
    handler: src/urlHandler.exec
    memorySize: 768
    timeout: 180
    events:
      - eventBridge:
          eventBus: jobboard
          pattern:
            source:
              - hub.crawl
    
  jobHandler:
    handler: src/jobHandler.exec
    memorySize: 768
    timeout: 180
    events:
      - stream:
          type: dynamodb
          batchSize: 1
          startingPosition: LATEST
          maximumRetryAttempts: 10
          arn:
            Fn::GetAtt:
              - URLSDynamoDbTable
              - StreamArn  
resources:
  Resources:
    #LogosS3:
    #  Type:  'AWS::S3::Bucket'
    #  Properties:
    #    BucketName: ${self:provider.environment.LOGOS_S3_BUCKET}
    #MarkDownS3:
    #  Type:  'AWS::S3::Bucket'
    #  Properties:
    #    BucketName: ${self:provider.environment.MARKDOWN_S3_BUCKET}
    HubsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: url
            AttributeType: S
        KeySchema:
          -
            AttributeName: url
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.HUBS_TABLE}
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
    URLSDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: url
            AttributeType: S
        KeySchema:
          -
            AttributeName: url
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.URLS_TABLE}
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
custom:
  serverless-offline-aws-eventbridge:
    port: 4010
    debug: true
  serverless-layers:
    packageManager: yarn
    layersDeploymentBucket: ${self:provider.environment.LAYERS_S3_BUCKET}
  serverless-offline-dynamodb-streams:
    endpoint: http://localhost:8000
    accessKeyId: local
    secretAccessKey: local
  s3:
    port: 8080
    directory: ./.s3
  chrome:
    flags:
      - --window-size=1280,1696
      - --hide-scrollbars
      - --ignore-certificate-errors