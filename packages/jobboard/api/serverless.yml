org: jobboard
app: jobboard-api
service: jobboard-api
plugins:
  - serverless-dotenv-plugin
  - serverless-layers
  - serverless-offline
provider:
  name: aws
  region: eu-central-1
  runtime: nodejs12.x
  environment:
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ses:SendEmail
      Resource: ${self:provider.environment.SES_ARN}
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:ListStreams
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.NEWSLETTER_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:ListStreams
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.HUBS_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:ListStreams
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.URLS_TABLE}"
functions:
  auth:
    handler: src/auth.exec
  newsletter-subscribe:
    handler: src/newsletter/subscribe.exec
    memorySize: 256
    timeout: 30
    events:
      - http:
          path: newsletter
          method: post
          cors: true
  newsletter-confirm:
    handler: src/newsletter/confirm.exec
    memorySize: 256
    timeout: 30
    events:
      - http:
          path: newsletter/{email}/{hash}
          method: get
          cors: true
  newsletter-unsubscribe:
    handler: src/newsletter/unsubscribe.exec
    memorySize: 256
    timeout: 30
    events:
      - http:
          path: newsletter/unsubscribe/{email}/{hash}
          method: get
          cors: true
  hub-list:
    handler: src/hubs/list.exec
    events:
      - http:
          path: hubs
          method: get
          authorizer: auth
          cors: true
  hub-create:
    handler: src/hubs/create.exec
    memorySize: 256
    timeout: 30
    events:
      - http:
          path: hubs
          authorizer: auth
          method: post
          cors: true
  url-list:
    handler: src/urls/list.exec
    events:
      - http:
          path: urls
          method: get
          authorizer: auth
          cors: true
  url-create:
    handler: src/urls/create.exec
    memorySize: 256
    timeout: 30
    events:
      - http:
          path: urls
          authorizer: auth
          method: post
          cors: true
  url-publish:
    handler: src/urls/setPublished.exec
    memorySize: 256
    timeout: 30
    events:
      - http:
          path: urls/publish
          authorizer: auth
          method: put
          cors: true
  url-download:
    handler: src/urls/setDownloaded.exec
    memorySize: 256
    timeout: 30
    events:
      - http:
          path: urls/download
          authorizer: auth
          method: put
          cors: true
  url-list-publish:
    handler: src/urls/listPublished.exec
    memorySize: 256
    timeout: 30
    events:
      - http:
          path: urls/publish
          authorizer: auth
          method: get
          cors: true
  url-list-download:
    handler: src/urls/listDownloaded.exec
    memorySize: 256
    timeout: 30
    events:
      - http:
          path: urls/download
          authorizer: auth
          method: get
          cors: true
  url-list-archive:
    handler: src/urls/listArchived.exec
    memorySize: 256
    timeout: 30
    events:
      - http:
          path: urls/archive
          authorizer: auth
          method: get
          cors: true
  url-archive:
    handler: src/urls/setArchived.exec
    memorySize: 256
    timeout: 30
    events:
      - http:
          path: urls/archive
          authorizer: auth
          method: put
          cors: true
  url-archive-old-jobs:
    handler: src/urls/archiveOldJobs.exec
    memorySize: 256
    timeout: 30
    events:
      - http:
          path: urls/archive
          authorizer: auth
          method: post
          cors: true
custom:
  serverless-layers:
    packageManager: yarn
    layersDeploymentBucket: ${self:provider.environment.LAYERS_S3_BUCKET}
  chrome:
    flags:
      - --window-size=1280,1696
      - --hide-scrollbars
      - --ignore-certificate-errors
resources:
  Resources:
    NewsletterDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "email"
            AttributeType: "S"
          -
            AttributeName: "emailHash"
            AttributeType: "S"
        KeySchema:
          -
            AttributeName: "email"
            KeyType: HASH
          - 
            AttributeName: "emailHash"
            KeyType: "RANGE"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.NEWSLETTER_TABLE}
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES